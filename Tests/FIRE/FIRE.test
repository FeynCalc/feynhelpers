(* :Title: General.test														*)

(*
	This software is covered by the GNU General Public License 3.
	Copyright (C) 2015-2016 Vladyslav Shtabovenko
*)

(* :Summary:  Framework independent unit tests for FeynHelpers				*)

(* ------------------------------------------------------------------------ *)

Tests`FIRE`Generic = ({
{"FIRE-Generic-ID1", "FIREBurn[0,{q},{}]", "0"},
{"FIRE-Generic-ID2", "FIREBurn[x,{q},{}]", "x"},
{"FIRE-Generic-ID3", "FIREBurn[0,{},{}]//FCE",
"FIREBurn[0, {}, {}]"},
{"FIRE-Generic-ID4", "FIREBurn[FAD[{q1,m}],{q},{}, FCE -> True, Timing->False]",
"FAD[{q1,m}]"},
{"FIRE-Generic-ID5", "FIREBurn[FAD[{q,1}],{q},{}, FCE -> True, Timing->False]",
"FAD[{q, 1}]"},
{"FIRE-Generic-ID6", "FIREBurn[FAD[{q,-3}],{q},{}, FCE -> True, Timing->False]",
"FAD[{q, -3}]"},
{"FIRE-Generic-ID7", "FIREBurn[FAD[{q,I}],{q},{}, FCE -> True, Timing->False]",
"FAD[{q, I}]"},
{"FIRE-Generic-ID8", "FIREBurn[FAD[{q,2+I}],{q},{}, FCE -> True, Timing->False]",
"FAD[{q, 2 + I}]"},
{"FIRE-Generic-ID9", "FIREBurn[FAD[{q,I m}],{q},{}, FCE -> True, Timing->False]",
"FAD[{q, I*m}]"},
{"FIRE-Generic-ID10", "FIREBurn[FAD[{q,a+I b}],{q},{}, FCE -> True, Timing->False]",
"FAD[{q, a + I*b}]"},
{"FIRE-Generic-ID11",
"FIREBurn[FAD[{q1,a+I b},{q,m,2}],{q},{}, FCE -> True, Timing->False]",
"((-2 + D)*FAD[{q, m}]*FAD[{q1, a + I*b}])/(2*m^2)"},
{"FIRE-Generic-ID12",
"FIREBurn[FAD[q, q, q - p], {q}, {p}, FCE -> True, Timing->False]",
"-(((-3 + D) FAD[q, -p + q])/SPD[p, p])"},
{"FIRE-Generic-ID13",
"FIREBurn[FAD[{q, 0, 2}, {q - p - k}], {q}, {p, k},
FIREAddPropagators -> {SPD[q, k] - m}, FCE -> True, Timing->False]",
"-(((-3 + D) FAD[q, -k - p + q])/(SPD[k, k] + 2 SPD[k, p] + SPD[p, p]))"},
{"FIRE-Generic-ID14",
"FIREBurn[FAD[{q1, m, 2}, {q1 + q3, m}, {q2 \[Minus] q3}, {q2, 0,2}], {q1, q2, q3}, {},
FIREAddPropagators -> {SPD[q1, q2], SPD[q1, q3]},FCE->True]",
"-(((-3 + D) (-10 + 3 D) (-8 + 3 D) FAD[{q1, m}, q2,
q2 - q3, {q1 + q3, m}])/(16 (-7 + 2 D) m^4))"},
{"FIRE-Generic-ID15", "FIREBurn[TID[FAD[{l, mf}, {l, mf}, {l, mf}] (4 mf FVD[l, mu] FVD[l, nu] +
	mf^3 MTD[mu, nu] - mf MTD[mu, nu] SPD[l, l]), l], {l}, {}]", "0"}
});
(*
Tests`FIRE`GenericWithFermat = ({
{"FIREGeneric-GenericWithFermat-ID1",
"FIREBurn[0,{q},{},FIREUsingFermat\[Rule]True]", "0"},
{"FIREGeneric-GenericWithFermat-ID2",
"FIREBurn[x,{q},{},FIREUsingFermat\[Rule]True]", "x"},
{"FIREGeneric-GenericWithFermat-ID3",
"FIREBurn[0,{},{},FIREUsingFermat\[Rule]True]//FCE",
"FIREBurn[0, {}, {}, FIREUsingFermat -> True]"},
{"FIREGeneric-GenericWithFermat-ID4",
"FIREBurn[FAD[{q1,m}],{q},{},FIREUsingFermat\[Rule]True]",
"FeynAmpDenominator[PropagatorDenominator[Momentum[q1, D], m]]"},
{"FIREGeneric-GenericWithFermat-ID5",
"FIREBurn[FAD[{q,1}],{q},{},FIREUsingFermat\[Rule]True]//FCE",
"FAD[{q, 1}]"},
{"FIREGeneric-GenericWithFermat-ID6",
"FIREBurn[FAD[{q,-3}],{q},{},FIREUsingFermat\[Rule]True]//FCE",
"FAD[{q, -3}]"},
{"FIREGeneric-GenericWithFermat-ID7",
"FIREBurn[FAD[{q,I}],{q},{},FIREUsingFermat\[Rule]True]//FCE",
"FAD[{q, I}]"},
{"FIREGeneric-GenericWithFermat-ID8",
"FIREBurn[FAD[{q,2+I}],{q},{},FIREUsingFermat\[Rule]True]//FCE",
"FAD[{q, 2 + I}]"},
{"FIREGeneric-GenericWithFermat-ID9",
"FIREBurn[FAD[{q,I m}],{q},{},FIREUsingFermat\[Rule]True]//FCE",
"FAD[{q, I*m}]"},
{"FIREGeneric-GenericWithFermat-ID10",
"FIREBurn[FAD[{q,a+I b}],{q},{},FIREUsingFermat\[Rule]True]//FCE",
"FAD[{q, a + I*b}]"},
{"FIREGeneric-GenericWithFermat-ID11",
"FIREBurn[FAD[{q1,a+I \
b},{q,m,2}],{q},{},FIREUsingFermat\[Rule]True]//FCE",
"((-2 + D)*FAD[{q, m}]*FAD[{q1, a + I*b}])/(2*m^2)"}
})
*)
